%% %%% 
% Test code
% markerStruct = trial.neutral_control.markers;
% forceStruct = trial.neutral_control.force;
% static_markerStruct = static.neutral_static.markers;

% Code does not include the keeogo output values
function [Knee, Ankle, markerStruct, forceStruct] = Inverse_3D_Dynamics_COM_7_18_debug(markerStruct, forceStruct, static_markerStruct,anthropometrics,trial_name)

inverse_markerStruct = markerStruct;
inverse_forceStruct = forceStruct;
inverse_static_markerStruct = static_markerStruct;

disp("inside inverse_3D function");
        disp(class(trial_name)); disp(trial_name); %debugging
        whos inverse_static_markerStruct
        disp(fieldnames(inverse_static_markerStruct));

%% Determine Segment Orientation
% Shank
[right_globe2ana,left_globe2ana,right_seg_omega,left_seg_omega,...
    right_seg_alpha,left_seg_alpha,right_ang,right_omega,right_alpha,...
    left_alpha] = calibrationmatrix_6_27_debug(inverse_static_markerStruct,inverse_markerStruct);

disp("shank: after calibrationmatrix");
        disp(class(trial_name)); disp(trial_name); %debugging
        whos inverse_static_markerStruct
        disp(fieldnames(inverse_static_markerStruct));

% Foot
[foot_right_globe2ana,foot_left_globe2ana,foot_right_seg_omega,...
    foot_left_seg_omega,foot_right_seg_alpha,foot_left_seg_alpha,...
    foot_right_ang,foot_right_omega,foot_right_alpha,foot_left_alpha] ...
    = calibrationmatrix_foot_6_27(inverse_static_markerStruct,inverse_markerStruct);

disp("foot: after calibrationmatrix");
        disp(class(trial_name)); disp(trial_name); %debugging
        whos inverse_static_markerStruct
        disp(fieldnames(inverse_static_markerStruct));

% Thigh
[right_globe2ana_thigh,left_globe2ana_thigh,right_ana2globe_thigh,...
    left_ana2globe_thigh,right_seg_omega_thigh,left_seg_omega_thigh,...
    right_seg_alpha_thigh,left_seg_alpha_thigh,right_ang_thigh,...
    right_omega_thigh,right_alpha_thigh,left_alpha_thigh,RKJC_ana,LKJC_ana]...
    = calibrationmatrix_thigh(inverse_static_markerStruct,inverse_markerStruct);

disp("thigh: after calibrationmatrix");
        disp(class(trial_name)); disp(trial_name); %debugging
        whos inverse_static_markerStruct
        disp(fieldnames(inverse_static_markerStruct));

%%
    % FP filter
    fs = 1000;
    fs_nyq = fs/2;
    win_smooth = 0.25;
    win_size = win_smooth*fs;
    bp_low = 10;
    bp_high = 500;
    fc_low = 25;
    Wn1 = bp_low/fs_nyq;
    Wn2 = bp_high/fs_nyq;
    Wn = fc_low/fs_nyq;
    [bb,ba] = butter(4,Wn,'low');

    % Mocap Filter
    fs_mocap = 100;
    fs_nyq_mo = fs_mocap/2;
    fc_mo_low = 6;
    Wn_mo = fc_mo_low/fs_nyq_mo;
    [cb,ca] = butter(4,Wn_mo,'low');

mass = anthropometrics(1);
height = anthropometrics(2);
gender = anthropometrics(3);

% Filter mocap markers
a = fieldnames(markerStruct);
for i = 1:length(a)-1

    markerStruct.(a{i})(isnan(inverse_markerStruct.(a{i}))) = 0;
    markerStruct.(a{i}) = filtfilt(cb,ca,markerStruct.(a{i}));
    markerStruct.(a{i}) = markerStruct.(a{i})/1000;

end

% Find the indices where the condition is met
idx1 = inverse_forceStruct.f1(:,2) < 50;
idx2 = inverse_forceStruct.f2(:,2) < 50;

% Set the corresponding rows in forceStruct.p1 and forceStruct.m1 to 0
inverse_forceStruct.p1(idx1,:) = 0;
inverse_forceStruct.m1(idx1,:) = 0;

% Set the corresponding rows in forceStruct.p2 and forceStruct.m2 to 0
inverse_forceStruct.p2(idx2,:) = 0;
inverse_forceStruct.m2(idx2,:) = 0;

% Update the remaining rows by dividing by 1000
inverse_forceStruct.p1(~idx1,:) = inverse_forceStruct.p1(~idx1,:) / 1000;
inverse_forceStruct.p2(~idx2,:) = inverse_forceStruct.p2(~idx2,:) / 1000;
inverse_forceStruct.m1(~idx1,:) = inverse_forceStruct.m1(~idx1,:) / 1000;
inverse_forceStruct.m2(~idx2,:) = inverse_forceStruct.m2(~idx2,:) / 1000;

% Filter FP data
fields = {'m1', 'm2', 'f1', 'f2', 'p1', 'p2'};
for i = 1:length(fields)
    inverse_forceStruct.(fields{i})(:,1:3) = filtfilt(bb, ba, inverse_forceStruct.(fields{i})(:,1:3));
end


%Find Ankle Joint Centers
for i = 1:3
    l_ajc(:,i) = mean([inverse_markerStruct.LMedMal(:,i), inverse_markerStruct.LLatMal(:,i)], 2);
    r_ajc(:,i) = mean([inverse_markerStruct.RMedMal(:,i), inverse_markerStruct.RLatMal(:,i)], 2);
end

% Find Segment Center of Mass Using 
LFoot.COM(:,1) = (inverse_markerStruct.LTOE(:,1) + inverse_markerStruct.L5Meta(:,1))*0.5;
LFoot.COM(:,2) = (inverse_markerStruct.LLatMal(:,2) + inverse_markerStruct.L2Meta(:,2))*0.5;
LFoot.COM(:,3) = (inverse_markerStruct.LLatMal(:,3) + inverse_markerStruct.L2Meta(:,3))*0.5;
RFoot.COM(:,1) = (inverse_markerStruct.RTOE(:,1) + inverse_markerStruct.R5Meta(:,1))*0.5;
RFoot.COM(:,2) = (inverse_markerStruct.RLatMal(:,2) + inverse_markerStruct.R2Meta(:,2))*0.5;
RFoot.COM(:,3) = (inverse_markerStruct.RLatMal(:,3) + inverse_markerStruct.R2Meta(:,3))*0.5;
LShank.COM(:,1) = (0.433*inverse_markerStruct.LMedMal(:,1) + 0.567*LKJC_ana(:,1));
LShank.COM(:,2) = (0.433*inverse_markerStruct.LMedMal(:,2) + 0.567*LKJC_ana(:,2));
LShank.COM(:,3) = (0.433*inverse_markerStruct.LMedMal(:,3) + 0.567*LKJC_ana(:,3));
RShank.COM(:,1) = (0.433*inverse_markerStruct.RMedMal(:,1) + 0.567*RKJC_ana(:,1));
RShank.COM(:,2) = (0.433*inverse_markerStruct.RMedMal(:,2) + 0.567*RKJC_ana(:,2));
RShank.COM(:,3) = (0.433*inverse_markerStruct.RMedMal(:,3) + 0.567*RKJC_ana(:,3));

%Find anthropometrics for genders
if gender == 1

    Foot.Mass = 0.0137*mass;
    Shank.Mass = 0.0433*mass;
    Foot.MOI(:,1) = Foot.Mass*0.257*(0.258/1.741*height)^2;
    Foot.MOI(:,2) = Foot.Mass*0.245*(0.258/1.741*height)^2;
    Foot.MOI(:,3) = Foot.Mass*0.124*(0.258/1.741*height)^2;
    Shank.MOI(:,1) = Shank.Mass*0.249*(0.434/1.741*height)^2;
    Shank.MOI(:,2) = Shank.Mass*0.103*(0.434/1.741*height)^2;
    Shank.MOI(:,3) = Shank.Mass*0.255*(0.434/1.741*height)^2;

elseif gender == 2

    Foot.Mass = 0.0129*mass;
    Shank.Mass = 0.0481*mass;
    Foot.MOI(:,1) = Foot.Mass*0.299*(0.228/1.735*height)^2;
    Foot.MOI(:,2) = Foot.Mass*0.279*(0.228/1.735*height)^2;
    Foot.MOI(:,3) = Foot.Mass*0.139*(0.228/1.735*height)^2;
    Shank.MOI(:,1) = Shank.Mass*0.267*(0.432/1.735*height)^2;
    Shank.MOI(:,2) = Shank.Mass*0.093*(0.432/1.735*height)^2;
    Shank.MOI(:,3) = Shank.Mass*0.271*(0.432/1.735*height)^2;

end


%% Grood and Suntay 1983
% Angle Calculation
common_left = cross(left_globe2ana(2,:,:),left_globe2ana_thigh(1,:,:),2)./...
    sqrt(sum(cross(left_globe2ana(2,:,:),left_globe2ana_thigh(1,:,:),2).^2,2));
common_right = cross(right_globe2ana(2,:,:),right_globe2ana_thigh(1,:,:),2)./...
    sqrt(sum(cross(right_globe2ana(2,:,:),right_globe2ana_thigh(1,:,:),2).^2,2));

Knee.Left.flexion_angle = unwrap(-asin(sum(common_left.*left_globe2ana_thigh(2,:,:),2)));
Knee.Right.flexion_angle = unwrap(-asin(sum(common_right.*right_globe2ana_thigh(2,:,:),2)));

%Reshape the table
Knee.Left.flexion_angle = reshape(Knee.Left.flexion_angle,length(Knee.Left.flexion_angle),1);
Knee.Right.flexion_angle = reshape(Knee.Right.flexion_angle,length(Knee.Right.flexion_angle),1);

%Upsample data to match force plate
Knee.Left.flexion_angle = ScaleTime(Knee.Left.flexion_angle,1,length(Knee.Left.flexion_angle),10*length(Knee.Left.flexion_angle));
Knee.Right.flexion_angle = ScaleTime(Knee.Right.flexion_angle,1,length(Knee.Right.flexion_angle),10*length(Knee.Right.flexion_angle));

% Ankle
common_left_ank = cross(foot_left_globe2ana(2,:,:),left_globe2ana(1,:,:),2)./...
    sqrt(sum(cross(foot_left_globe2ana(2,:,:),left_globe2ana(1,:,:),2).^2,2));
common_right_ank = cross(foot_right_globe2ana(2,:,:),right_globe2ana(1,:,:),2)./...
    sqrt(sum(cross(foot_right_globe2ana(2,:,:),right_globe2ana(1,:,:),2).^2,2));

Ankle.Left.flexion_angle = unwrap(-asin(sum(common_left_ank.*left_globe2ana(2,:,:),2)));
Ankle.Right.flexion_angle = unwrap(-asin(sum(common_right_ank.*right_globe2ana(2,:,:),2)));

%Reshape the table
Ankle.Left.flexion_angle = reshape(Ankle.Left.flexion_angle,length(Ankle.Left.flexion_angle),1);
Ankle.Right.flexion_angle = reshape(Ankle.Right.flexion_angle,length(Ankle.Right.flexion_angle),1);

%Upsample data to match force plate
Ankle.Left.flexion_angle = ScaleTime(Ankle.Left.flexion_angle,1,length(Ankle.Left.flexion_angle),10*length(Ankle.Left.flexion_angle));
Ankle.Right.flexion_angle = ScaleTime(Ankle.Right.flexion_angle,1,length(Ankle.Right.flexion_angle),10*length(Ankle.Right.flexion_angle));

%%
% Filter data
RFoot.COM(isnan(RFoot.COM))= 0;
RFoot.COM = filtfilt(cb,ca,RFoot.COM);
LFoot.COM(isnan(LFoot.COM))= 0;
LFoot.COM = filtfilt(cb,ca,LFoot.COM);

RShank.COM(isnan(RShank.COM))= 0;
RShank.COM = filtfilt(cb,ca,RShank.COM);
LShank.COM(isnan(LShank.COM))= 0;
LShank.COM = filtfilt(cb,ca,LShank.COM); 

LKJC_ana(isnan(LKJC_ana)) = 0;
LKJC_ana = filtfilt(cb,ca,LKJC_ana);
RKJC_ana(isnan(RKJC_ana)) = 0;
RKJC_ana = filtfilt(cb,ca,RKJC_ana);

% Initialize Velocity and Acceleration
Velocity.Left.Foot = zeros(size(RFoot.COM));
Velocity.Right.Foot = zeros(size(RFoot.COM));
Velocity.Left.Shank = zeros(size(RFoot.COM));
Velocity.Right.Shank = zeros(size(RFoot.COM));
Acceleration.Left.Foot = zeros(size(RFoot.COM));
Acceleration.Right.Foot = zeros(size(RFoot.COM));
Acceleration.Left.Shank = zeros(size(RFoot.COM));
Acceleration.Right.Shank = zeros(size(RFoot.COM));

%Calculate Acceleration and Velocity with Position Data
for i = 2:length(RFoot.COM)-1
    Velocity.Left.Foot(i,1) = (LFoot.COM(i+1,1) - LFoot.COM(i-1,1))/.02;
    Velocity.Left.Foot(i,2) = (LFoot.COM(i+1,2) - LFoot.COM(i-1,2))/.02; 
    Velocity.Left.Foot(i,3) = (LFoot.COM(i+1,3) - LFoot.COM(i-1,3))/.02; 
    Velocity.Right.Foot(i,1) = (RFoot.COM(i+1,1) - RFoot.COM(i-1,1))/.02; 
    Velocity.Right.Foot(i,2) = (RFoot.COM(i+1,2) - RFoot.COM(i-1,2))/.02; 
    Velocity.Right.Foot(i,3) = (RFoot.COM(i+1,3) - RFoot.COM(i-1,3))/.02; 
    Velocity.Left.Shank(i,1) = (LShank.COM(i+1,1) - LShank.COM(i-1,1))/.02; 
    Velocity.Left.Shank(i,2) = (LShank.COM(i+1,2) - LShank.COM(i-1,2))/.02; 
    Velocity.Left.Shank(i,3) = (LShank.COM(i+1,3) - LShank.COM(i-1,3))/.02; 
    Velocity.Right.Shank(i,1) = (RShank.COM(i+1,1) - RShank.COM(i-1,1))/.02; 
    Velocity.Right.Shank(i,2) = (RShank.COM(i+1,2) - RShank.COM(i-1,2))/.02; 
    Velocity.Right.Shank(i,3) = (RShank.COM(i+1,3) - RShank.COM(i-1,3))/.02; 
    Acceleration.Left.Foot(i,1) = (LFoot.COM(i+1,1) - 2*LFoot.COM(i,1) + LFoot.COM(i-1,1))/(.01^2);
    Acceleration.Left.Foot(i,2) = (LFoot.COM(i+1,2) - 2*LFoot.COM(i,2) + LFoot.COM(i-1,2))/(.01^2); 
    Acceleration.Left.Foot(i,3) = (LFoot.COM(i+1,3) - 2*LFoot.COM(i,3) + LFoot.COM(i-1,3))/(.01^2); 
    Acceleration.Right.Foot(i,1) = (RFoot.COM(i+1,1) - 2*RFoot.COM(i,1) + RFoot.COM(i-1,1))/(.01^2); 
    Acceleration.Right.Foot(i,2) = (RFoot.COM(i+1,2) - 2*RFoot.COM(i,2) + RFoot.COM(i-1,2))/(.01^2); 
    Acceleration.Right.Foot(i,3) = (RFoot.COM(i+1,3) - 2*RFoot.COM(i,3) + RFoot.COM(i-1,3))/(.01^2); 
    Acceleration.Left.Shank(i,1) = (LShank.COM(i+1,1) - 2*LShank.COM(i,1) + LShank.COM(i-1,1))/(.01^2); 
    Acceleration.Left.Shank(i,2) = (LShank.COM(i+1,2) - 2*LShank.COM(i,2) + LShank.COM(i-1,2))/(.01^2); 
    Acceleration.Left.Shank(i,3) = (LShank.COM(i+1,3) - 2*LShank.COM(i,3) + LShank.COM(i-1,3))/(.01^2); 
    Acceleration.Right.Shank(i,1) = (RShank.COM(i+1,1) - 2*RShank.COM(i,1) + RShank.COM(i-1,1))/(.01^2);
    Acceleration.Right.Shank(i,2) = (RShank.COM(i+1,2) - 2*RShank.COM(i,2) + RShank.COM(i-1,2))/(.01^2);
    Acceleration.Right.Shank(i,3) = (RShank.COM(i+1,3) - 2*RShank.COM(i,3) + RShank.COM(i-1,3))/(.01^2);
end

%%
% Upsample data to match with force plate data
right_globe2ana = ScaleTime_MI(right_globe2ana,1,length(right_globe2ana),10*length(right_globe2ana));
left_globe2ana = ScaleTime_MI(left_globe2ana,1,length(left_globe2ana),10*length(left_globe2ana));
right_globe2ana_thigh = ScaleTime_MI(right_globe2ana_thigh,1,length(right_globe2ana_thigh),10*length(right_globe2ana_thigh));
left_globe2ana_thigh = ScaleTime_MI(left_globe2ana_thigh,1,length(left_globe2ana_thigh),10*length(left_globe2ana_thigh));
RKJC_ana = ScaleTime(RKJC_ana,1,length(RKJC_ana),10*length(RKJC_ana));
LKJC_ana = ScaleTime(LKJC_ana,1,length(LKJC_ana),10*length(LKJC_ana));

% Upsample marker data
a = fieldnames(markerStruct);
for i = 1:length(a)
    markerStruct.(a{i}) = ScaleTime(markerStruct.(a{i}),1,length(markerStruct.(a{i})),10*length(markerStruct.(a{i})));
end

% Upsample Shank Angular Acceleration
right_alpha = ScaleTime(right_alpha,1,length(right_alpha),10*length(right_alpha));
left_alpha = ScaleTime(left_alpha,1,length(left_alpha),10*length(left_alpha));

% Upsample Foot Angular Acceleration
foot_right_alpha = ScaleTime(foot_right_alpha,1,length(foot_right_alpha),10*length(foot_right_alpha));
foot_left_alpha = ScaleTime(foot_left_alpha,1,length(foot_left_alpha),10*length(foot_left_alpha));

% Upsample Foot Acceleration
Acceleration.Left.Foot= ScaleTime(Acceleration.Left.Foot,1,length(Acceleration.Left.Foot),10*length(Acceleration.Left.Foot));
Acceleration.Right.Foot= ScaleTime(Acceleration.Right.Foot,1,length(Acceleration.Right.Foot),10*length(Acceleration.Right.Foot));

% Upsample Shank Acceleration
Acceleration.Left.Shank= ScaleTime(Acceleration.Left.Shank,1,length(Acceleration.Left.Shank),10*length(Acceleration.Left.Shank));
Acceleration.Right.Shank= ScaleTime(Acceleration.Right.Shank,1,length(Acceleration.Right.Shank),10*length(Acceleration.Right.Shank));

% Upsample Segment Position
LFoot.COM = ScaleTime(LFoot.COM,1,length(LFoot.COM),10*length(LFoot.COM));
RFoot.COM = ScaleTime(RFoot.COM,1,length(RFoot.COM),10*length(RFoot.COM));
LShank.COM = ScaleTime(LShank.COM,1,length(LShank.COM),10*length(LShank.COM));
RShank.COM = ScaleTime(RShank.COM,1,length(RShank.COM),10*length(RShank.COM));

% Upsample Ankle Joint Position
l_ajc = ScaleTime(l_ajc,1,length(l_ajc),10*length(l_ajc));
r_ajc = ScaleTime(r_ajc,1,length(r_ajc),10*length(r_ajc));

%% Calculate Ankle Kinetics
% Initialize Ankle Kinetics
Ankle.Left.Force = zeros(3,length(inverse_forceStruct.f1))';
Ankle.Right.Force = zeros(3,length(inverse_forceStruct.f1))';
Ankle.Left.Moment = zeros(3,length(inverse_forceStruct.f1))';
Ankle.Right.Moment = zeros(3,length(inverse_forceStruct.f1))';

% Calculate x-Force (Med/Lat)
Ankle.Left.Force(:,1) = Foot.Mass*Acceleration.Left.Foot(:,1) - inverse_forceStruct.f1(:,1);
Ankle.Right.Force(:,1) = Foot.Mass*Acceleration.Right.Foot(:,1) - inverse_forceStruct.f2(:,1);

% Calculate y- and z- Force for different slopes (Fore/Aft & Vertical)
if contains(lower(trial_name), 'uphill')
    Ankle.Left.Force(:,2) = Foot.Mass*Acceleration.Left.Foot(:,2) - inverse_forceStruct.f1(:,2) + Foot.Mass*9.81*cos(8.6*pi/180);
    Ankle.Right.Force(:,2) = Foot.Mass*Acceleration.Right.Foot(:,2) - inverse_forceStruct.f2(:,2) + Foot.Mass*9.81*cos(8.6*pi/180);
    Ankle.Left.Force(:,3) = Foot.Mass*Acceleration.Left.Foot(:,3) - inverse_forceStruct.f1(:,3) + Foot.Mass*9.81*sin(8.6*pi/180);
    Ankle.Right.Force(:,3) = Foot.Mass*Acceleration.Right.Foot(:,3) - inverse_forceStruct.f2(:,3) + Foot.Mass*9.81*sin(8.6*pi/180);
elseif contains(lower(trial_name), 'down')
    Ankle.Left.Force(:,2) = Foot.Mass*Acceleration.Left.Foot(:,2) - inverse_forceStruct.f1(:,2) + Foot.Mass*9.81*cos(8.6*pi/180);
    Ankle.Right.Force(:,2) = Foot.Mass*Acceleration.Right.Foot(:,2) - inverse_forceStruct.f2(:,2) + Foot.Mass*9.81*cos(8.6*pi/180);
    Ankle.Left.Force(:,3) = Foot.Mass*Acceleration.Left.Foot(:,3) - inverse_forceStruct.f1(:,3) - Foot.Mass*9.81*sin(8.6*pi/180);
    Ankle.Right.Force(:,3) = Foot.Mass*Acceleration.Right.Foot(:,3) - inverse_forceStruct.f2(:,3) - Foot.Mass*9.81*sin(8.6*pi/180);
elseif contains(lower(trial_name),'neutral')
    Ankle.Left.Force(:,2) = Foot.Mass*Acceleration.Left.Foot(:,2) - inverse_forceStruct.f1(:,2) + Foot.Mass*9.81;
    Ankle.Right.Force(:,2) = Foot.Mass*Acceleration.Right.Foot(:,2) - inverse_forceStruct.f2(:,2) + Foot.Mass*9.81;
    Ankle.Left.Force(:,3) = Foot.Mass*Acceleration.Left.Foot(:,3) - inverse_forceStruct.f1(:,3);
    Ankle.Right.Force(:,3) = Foot.Mass*Acceleration.Right.Foot(:,3) - inverse_forceStruct.f2(:,3);
end

% % Left
% Extension
Ankle.Left.Moment(:,1) = (Foot.MOI(1))*foot_left_alpha(:,1)-...
    (inverse_forceStruct.f1(:,3) .* (inverse_forceStruct.p1(:,2)-LFoot.COM(:,2))) +...
    (inverse_forceStruct.f1(:,2) .* (inverse_forceStruct.p1(:,3) - LFoot.COM(:,3))) +...
    (Ankle.Left.Force(:,2) .* (l_ajc(:,3)-LFoot.COM(:,3)))-...
    (Ankle.Left.Force(:,3) .* (l_ajc(:,2)-LFoot.COM(:,2)));
% Rotation
Ankle.Left.Moment(:,2) = Foot.MOI(2)*foot_left_alpha(:,2)+ ...
    (inverse_forceStruct.f1(:,3) .* (inverse_forceStruct.p1(:,1) - LFoot.COM(:,1)))-... 
    (inverse_forceStruct.f1(:,1) .* (inverse_forceStruct.p1(:,3) - LFoot.COM(:,3)))+...
    (Ankle.Left.Force(:,3) .* (l_ajc(:,1) -LFoot.COM(:,1)))- ...
    (Ankle.Left.Force(:,1) .* (l_ajc(:,3)-LFoot.COM(:,3)))-inverse_forceStruct.m1(:,2);
% Abduction
Ankle.Left.Moment(:,3) = Foot.MOI(3)*foot_left_alpha(:,3)- ...
    (inverse_forceStruct.f1(:,2) .* (inverse_forceStruct.p1(:,1) - LFoot.COM(:,1)))+... 
    (inverse_forceStruct.f1(:,1) .* (inverse_forceStruct.p1(:,2) - LFoot.COM(:,2)))-...
    (Ankle.Left.Force(:,2) .* (l_ajc(:,1)-LFoot.COM(:,1))) + ...
    (Ankle.Left.Force(:,1) .* (l_ajc(:,2)-LFoot.COM(:,2)));

% % Right
%Extension
Ankle.Right.Moment(:,1) = Foot.MOI(1)*foot_right_alpha(:,1)-...
    (inverse_forceStruct.f2(:,3) .* (inverse_forceStruct.p2(:,2)-RFoot.COM(:,2))) +...
    (inverse_forceStruct.f2(:,2) .* (inverse_forceStruct.p2(:,3) - RFoot.COM(:,3))) +...
    (Ankle.Right.Force(:,2) .* (r_ajc(:,3)-RFoot.COM(:,3)))-...
    (Ankle.Right.Force(:,3) .* (r_ajc(:,2)-RFoot.COM(:,2)));
%Rotation
Ankle.Right.Moment(:,2) = Foot.MOI(2)*foot_right_alpha(:,2)+ ...
    (inverse_forceStruct.f2(:,3) .* (inverse_forceStruct.p2(:,1) - RFoot.COM(:,1)))-... 
    (inverse_forceStruct.f2(:,1) .* (inverse_forceStruct.p2(:,3) - RFoot.COM(:,3)))+...
    (Ankle.Right.Force(:,3) .* (r_ajc(:,1)-RFoot.COM(:,1))) - ...
    (Ankle.Right.Force(:,1) .* (r_ajc(:,3)-RFoot.COM(:,3)))-inverse_forceStruct.m2(:,2);
%Abduction
Ankle.Right.Moment(:,3) = Foot.MOI(3)*foot_right_alpha(:,3)- ...
    (inverse_forceStruct.f2(:,2) .* (inverse_forceStruct.p2(:,1) - RFoot.COM(:,1)))+... 
    (inverse_forceStruct.f2(:,1) .* (inverse_forceStruct.p2(:,2) - RFoot.COM(:,2)))-...
    (Ankle.Right.Force(:,2) .* (r_ajc(:,1)-RFoot.COM(:,1))) + ...
    (Ankle.Right.Force(:,1) .* (r_ajc(:,2)-RFoot.COM(:,2)));

%% Calculate Knee Kinetics
% Initialize Knee Kinetics
Knee.Left.Force = zeros(length(inverse_forceStruct.f1),3);
Knee.Right.Force = zeros(length(inverse_forceStruct.f1),3);
Knee.Right.Moment = zeros(length(inverse_forceStruct.f1),3);
Knee.Right.Moment = zeros(length(inverse_forceStruct.f1),3);

% Calculate x-Force (Med/Lat)
Knee.Left.Force(:,1) = Shank.Mass*Acceleration.Left.Shank(:,1) - -Ankle.Left.Force(:,1);
Knee.Right.Force(:,1) = Shank.Mass*Acceleration.Right.Shank(:,1) - -Ankle.Right.Force(:,1);

% Calculate y- and z- Force for different slopes (Fore-Aft & Vertical)
if contains(lower(trial_name), 'uphill')
    Knee.Left.Force(:,2) = Shank.Mass*Acceleration.Left.Shank(:,2) - -Ankle.Left.Force(:,2) + Shank.Mass*9.81*cos(8.6*pi/180);
    Knee.Right.Force(:,2) = Shank.Mass*Acceleration.Right.Shank(:,2) - -Ankle.Right.Force(:,2) + Shank.Mass*9.81*cos(8.6*pi/180);
    Knee.Left.Force(:,3) = Shank.Mass*Acceleration.Left.Shank(:,3) - -Ankle.Left.Force(:,3) + Shank.Mass*9.81*sin(8.6*pi/180);
    Knee.Right.Force(:,3) = Shank.Mass*Acceleration.Right.Shank(:,3) - -Ankle.Right.Force(:,3) + Shank.Mass*9.81*sin(8.6*pi/180);
elseif contains(lower(trial_name), 'down')
    Knee.Left.Force(:,2) = Shank.Mass*Acceleration.Left.Shank(:,2) - -Ankle.Left.Force(:,2) + Shank.Mass*9.81*cos(8.6*pi/180);
    Knee.Right.Force(:,2) = Shank.Mass*Acceleration.Right.Shank(:,2) - -Ankle.Right.Force(:,2) + Shank.Mass*9.81*cos(8.6*pi/180);
    Knee.Left.Force(:,3) = Shank.Mass*Acceleration.Left.Shank(:,3) - -Ankle.Left.Force(:,3) - Shank.Mass*9.81*sin(8.6*pi/180);
    Knee.Right.Force(:,3) = Shank.Mass*Acceleration.Right.Shank(:,3) - -Ankle.Right.Force(:,3) - Shank.Mass*9.81*sin(8.6*pi/180);
elseif contains(lower(trial_name),'neutral')
    Knee.Left.Force(:,2) = Shank.Mass*Acceleration.Left.Shank(:,2) - -Ankle.Left.Force(:,2) + Shank.Mass*9.81;
    Knee.Right.Force(:,2) = Shank.Mass*Acceleration.Right.Shank(:,2) - -Ankle.Right.Force(:,2) + Shank.Mass*9.81;
    Knee.Left.Force(:,3) = Shank.Mass*Acceleration.Left.Shank(:,3) - -Ankle.Left.Force(:,3);
    Knee.Right.Force(:,3) = Shank.Mass*Acceleration.Right.Shank(:,3) - -Ankle.Right.Force(:,3);
end

% % Left Moment
% Extension
Knee.Left.Moment(:,1) = Shank.MOI(1)*left_alpha(:,1)-...
    (-Ankle.Left.Force(:,3)) .* (l_ajc(:,2) - LShank.COM(:,2)) +...
    (-Ankle.Left.Force(:,2)) .* (l_ajc(:,3) - LShank.COM(:,3))-...
    (Knee.Left.Force(:,3) .* (LKJC_ana(:,2) - LShank.COM(:,2)))+...
    (Knee.Left.Force(:,2) .* (LKJC_ana(:,3) - LShank.COM(:,3)))+Ankle.Left.Moment(:,1);
% Rotation
Knee.Left.Moment(:,2) = Shank.MOI(2)*left_alpha(:,2)+...
    (-Ankle.Left.Force(:,3) .* (l_ajc(:,1)-LShank.COM(:,1))) -...
    (-Ankle.Left.Force(:,1) .* (l_ajc(:,3) - LShank.COM(:,3)))+...
    (Knee.Left.Force(:,3) .* (LKJC_ana(:,1) - LShank.COM(:,1)))-...
    (Knee.Left.Force(:,1) .* (LKJC_ana(:,3) - LShank.COM(:,3))) + Ankle.Left.Moment(:,2);
% Ab/d-duction
Knee.Left.Moment(:,3) = Shank.MOI(3)*left_alpha(:,3)-...
    (-Ankle.Left.Force(:,2) .* (l_ajc(:,1)-LShank.COM(:,1))) +...
    (-Ankle.Left.Force(:,1) .* (l_ajc(:,2) - LShank.COM(:,2)))-...
    (Knee.Left.Force(:,2) .* (LKJC_ana(:,1) - LShank.COM(:,1)))+...
    (Knee.Left.Force(:,1) .* (LKJC_ana(:,2) - LShank.COM(:,2))) + Ankle.Left.Moment(:,3); 

% % Right Moment
% Extension
Knee.Right.Moment(:,1) = Shank.MOI(1)*right_alpha(:,1)-...
    (-Ankle.Right.Force(:,3) .* (r_ajc(:,2) - RShank.COM(:,2))) +...
    (-Ankle.Right.Force(:,2) .* (r_ajc(:,3) - RShank.COM(:,3)))-...
    (Knee.Right.Force(:,3) .* (RKJC_ana(:,2) - RShank.COM(:,2)))+...
    (Knee.Right.Force(:,2) .* (RKJC_ana(:,3) - RShank.COM(:,3)))+Ankle.Right.Moment(:,1);
% Rotation
Knee.Right.Moment(:,2) = Shank.MOI(2)*right_alpha(:,2)+...
    (-Ankle.Right.Force(:,3) .* (r_ajc(:,1)-RShank.COM(:,1))) -...
    (-Ankle.Right.Force(:,1) .* (r_ajc(:,3) - RShank.COM(:,3)))+...
    (Knee.Right.Force(:,3) .* (RKJC_ana(:,1) - RShank.COM(:,1)))-...
    (Knee.Right.Force(:,1) .* (RKJC_ana(:,3) - RShank.COM(:,3))) + Ankle.Right.Moment(:,2);
% Ab/d-duction
Knee.Right.Moment(:,3) = Shank.MOI(3)*right_alpha(:,3)-...
    (-Ankle.Right.Force(:,2) .* (r_ajc(:,1)-RShank.COM(:,1))) +...
    (-Ankle.Right.Force(:,1) .* (r_ajc(:,2) - RShank.COM(:,2)))-...
    (Knee.Right.Force(:,2) .* (RKJC_ana(:,1) - RShank.COM(:,1)))+...
    (Knee.Right.Force(:,1) .* (RKJC_ana(:,2) - RShank.COM(:,2))) + Ankle.Right.Moment(:,3);

%% Converting to Segment Coordinate System
%Initialize data
    Knee.Right.seg_kneeforce = zeros(length(right_globe2ana),3);
    Knee.Left.seg_kneeforce = zeros(length(right_globe2ana),3);
    Ankle.Right.seg_anklemom = zeros(length(right_globe2ana),3);
    Ankle.Left.seg_anklemom = zeros(length(right_globe2ana),3);
    Ankle.Right.seg_ankleforce = zeros(length(right_globe2ana),3);
    Ankle.Left.seg_ankleforce = zeros(length(right_globe2ana),3);
    Knee.Right.seg_kneemoment = zeros(length(right_globe2ana),3);
    Knee.Left.seg_kneemoment = zeros(length(right_globe2ana),3);
  
% Rotation matrix
for i = 1:length(right_globe2ana)
    Knee.Right.seg_kneeforce(i,:) = (right_globe2ana(:,:,i)*(Knee.Right.Force(i,:)'))';
    Knee.Left.seg_kneeforce(i,:) = (left_globe2ana(:,:,i)*(Knee.Left.Force(i,:)'))';
    Ankle.Right.seg_anklemom(i,:) = (right_globe2ana(:,:,i)*(Ankle.Right.Moment(i,:)'))';
    Ankle.Left.seg_anklemom(i,:) = (left_globe2ana(:,:,i)*(Ankle.Left.Moment(i,:)'))';
    Ankle.Right.seg_ankleforce(i,:) = (right_globe2ana(:,:,i)*(Ankle.Right.Force(i,:)'))';
    Ankle.Left.seg_ankleforce(i,:) = (left_globe2ana(:,:,i)*(Ankle.Left.Force(i,:)'))';
    Knee.Right.seg_kneemoment(i,:) = (right_globe2ana(:,:,i)*(Knee.Right.Moment(i,:)'))';
    Knee.Left.seg_kneemoment(i,:) = (left_globe2ana(:,:,i)*(Knee.Left.Moment(i,:)'))';

    Knee.Right.right_thigh_seg_kneeforce(i,:) = (right_globe2ana_thigh(:,:,i)*(Knee.Right.Force(i,:)'))';
    Knee.Left.left_thigh_seg_kneeforce(i,:) = (left_globe2ana_thigh(:,:,i)*(Knee.Left.Force(i,:)'))';
    Knee.Right.right_thigh_seg_kneemoment(i,:) = (right_globe2ana_thigh(:,:,i)*(Knee.Right.Moment(i,:)'))';
    Knee.Left.left_thigh_seg_kneemoment(i,:) = (left_globe2ana_thigh(:,:,i)*(Knee.Left.Moment(i,:)'))';
end

end